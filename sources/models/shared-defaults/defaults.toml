# Here we define a common set of default settings for most variants.
# A variant includes these by symlinking this file into its `defaults.d` directory.
# It can override these settings in any file listed after that in the directory.

# The structures, fields, and types here need to match those of the API model,
# as defined in src/VARIANT/mod.rs.

[settings]
motd = "Welcome to Bottlerocket!"

[metadata.settings.motd]
affected-services = ["motd"]

[services.motd]
configuration-files = ["motd"]
restart-commands = []

[configuration-files.motd]
path = "/etc/motd"
template-path = "/usr/share/templates/motd"

# Container runtime.

[services.containerd]
configuration-files = ["containerd-config-toml", "proxy-env"]
restart-commands = ["/bin/systemctl try-restart containerd.service"]

[configuration-files.containerd-config-toml]
path = "/etc/containerd/config.toml"
template-path = "/usr/share/templates/containerd-config-toml"

# Host-container runtime

[services.host-containerd]
configuration-files = ["proxy-env"]
restart-commands = ["/bin/systemctl try-restart host-containerd.service"]

# Updates.

[settings.updates]
targets-base-url = "https://updates.bottlerocket.aws/targets/"
version-lock = "latest"
ignore-waves = false

[metadata.settings.updates.metadata-base-url]
setting-generator = "schnauzer settings.updates.metadata-base-url"
template = "https://updates.bottlerocket.aws/2020-07-07/{{ os.variant_id }}/{{ os.arch }}/"

[services.updog]
configuration-files = ["updog-toml"]
restart-commands = []

[configuration-files.updog-toml]
path = "/etc/updog.toml"
template-path = "/usr/share/templates/updog-toml"

[metadata.settings.updates]
affected-services = ["updog"]
seed.setting-generator = "bork seed"

# Metrics

[settings.metrics]
# the URL to which anonymous health metrics will be sent
metrics-url = "https://metrics.bottlerocket.aws/v1/metrics"
# whether or not health metrics will be sent. set to false to opt-out
send-metrics = true
# the list of services that are checked to determine if a host is healthy,
# overridden in each variant to list services critical to that variant
service-checks = ["apiserver", "chronyd", "containerd", "host-containerd"]

[services.metricdog]
configuration-files = ["metricdog-toml", "proxy-env"]
restart-commands = ["/bin/systemctl try-restart metricdog.service"]

[configuration-files.metricdog-toml]
path = "/etc/metricdog.toml"
template-path = "/usr/share/templates/metricdog-toml"

# HostContainers

[services.host-containers]
configuration-files = []
restart-commands = ["/usr/bin/host-containers"]

[metadata.settings.host-containers]
affected-services = ["host-containers"]

# Network

[configuration-files.proxy-env]
path = "/etc/network/proxy.env"
template-path = "/usr/share/templates/proxy-env"

[metadata.settings.network]
affected-services = ["containerd", "host-containerd"]

# NTP

[settings.ntp]
time-servers = ["169.254.169.123", "2.amazon.pool.ntp.org"]

[services.ntp]
configuration-files = ["chrony-conf"]
restart-commands = ["/bin/systemctl try-reload-or-restart chronyd.service"]

[configuration-files.chrony-conf]
path = "/etc/chrony.conf"
template-path = "/usr/share/templates/chrony-conf"

[metadata.settings.ntp]
affected-services = ["chronyd"]

# Kernel

[settings.kernel]
lockdown = "none"

[services.sysctl]
configuration-files = []
restart-commands = ["/usr/bin/corndog sysctl"]

[metadata.settings.kernel.sysctl]
affected-services = ["sysctl"]

[services.lockdown]
configuration-files = []
restart-commands = ["/usr/bin/corndog lockdown"]

[metadata.settings.kernel.lockdown]
affected-services = ["lockdown"]
